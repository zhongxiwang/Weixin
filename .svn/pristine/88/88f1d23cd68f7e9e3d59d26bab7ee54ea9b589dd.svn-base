var Common = Common || { Log: { 用户登录: "129003001", 用户退出: "129003008", 数据新增: "129003003", 数据编辑: "129003004", 数据删除: "129003005", 异常信息: "129003006", 数据导出: "129003007", 页面浏览: "129003002" }};
$.extend(Common, {
    //浏览器时下窗口可视区域高度 
    HeightWindow: $(window).height(),
    //浏览器时下窗口可视区域宽度 
    WidthWindow: $(window).width(),
    //浏览器判断
    IsIE: /msie/.test(navigator.userAgent.toLowerCase()),
    IsFireFox: /firefox/.test(navigator.userAgent.toLowerCase()),
    IsOpera: /opera/.test(navigator.userAgent.toLowerCase()),
    //获取操作系统版本
    OS: function() { var sUserAgent = navigator.userAgent; var isWin = (navigator.platform == "Win32") || (navigator.platform == "Windows"); if (isWin) { var isWin8 = sUserAgent.indexOf("Windows NT 6.2") > -1 || sUserAgent.indexOf("Windows NT 6.3") > -1 || sUserAgent.indexOf("Windows 8") > -1; if (isWin8) return "Win8"; var isWin10 = sUserAgent.indexOf("Windows NT 6.4") > -1 || sUserAgent.indexOf("Windows NT 10.0") > -1 || sUserAgent.indexOf("Windows 10") > -1; if (isWin10) return "Win10"; } return "other"; },
    alert:function(msg){alert(msg)},
    //生成Guid
    Guid: function() { var guid = 'xxxxxxxa-xxxn-xxxt-xxxu-xlxxxxxxxxyx'.replace(/[xy]/g, function(c) { var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8); return v.toString(16); }).toUpperCase(); return guid; },
    //LiuY  20170520 生成随机数字, 起  止
    Random: function(startno, endno) { if (!startno) { startno = 1; } else { startno = parseInt(startno); } if (!endno) { endno = 9; } else { endno = parseInt(endno); } var num = Math.random() * (endno - startno) + startno; num = parseInt(num, 10); return num; },
    
    //Cookie操作
    GetCookie: function(name) { var r = new RegExp('(^|;|\\s+)' + name + '=([^;]*)(;|$)'); var m = document.cookie.match(r); return (!m ? '' : Common.Decode(m[2])); },
    SetCookie: function(name, value, expire, domain, path) { if (!expire) { expire = 24; }; var s = name + '=' + Common.Encode(value); if (!Common.IsUndefined(path)) s = s + '; path=' + path; if (expire > 0) { var d = new Date(); d.setTime(d.getTime() + expire * 1000 * 3600); if (!Common.IsUndefined(domain)) s = s + '; domain=' + domain; s = s + '; expires=' + d.toGMTString(); } document.cookie = s; },
    RemoveCookie: function(name, domain, path) { var s = name + '='; if (!Common.IsUndefined(domain)) s = s + '; domain=' + domain; if (!Common.IsUndefined(path)) s = s + '; path=' + path; s = s + '; expires=Fri, 02-Jan-1970 00:00:00 GMT'; document.cookie = s; },

    //Ztree操作
    ZTreeCheckClear: function(id, field) { var zTree = $.fn.zTree.getZTreeObj(id); if (zTree) { var nodes = zTree.getCheckedNodes(true); for (var i = 0; i < nodes.length; i++) { var node = zTree.getNodeByParam('id', nodes[i][field]); zTree.checkNode(node, false, true, true); } } },
    ZTreechecked: function(id, field, folder) { var zTree = $.fn.zTree.getZTreeObj(id); var values = []; if (zTree) { var checkedNodes = zTree.getCheckedNodes(true); if (!field || field == "") { field = "id"; } for (var i = 0; i < checkedNodes.length; i++) { if (folder) { values[values.length] = checkedNodes[i][field]; } else if (!checkedNodes[i].children) { values[values.length] = checkedNodes[i][field]; } } } return values },
    //Obj操作
    Clear: function(obj) { $("#" + obj).val("") },
    IsUndefined: function(obj) { return typeof obj == 'undefined'; },
    IsObject: function(obj) { return typeof obj == 'object'; },
    IsNumber: function(obj) { return typeof obj == 'number'; },
    IsString: function(obj) { return typeof obj == 'string'; },
    IsElement: function(obj) { return obj && obj.nodeType == 1; },
    IsFunction: function(obj) { return typeof obj == 'function'; },
    Upper: function(obj) { if (obj) { return obj.toLocaleUpperCase(); ; } else { return ""; } },
    Lower: function (obj) { if (obj) { return obj.toLocaleLowerCase(); } else { return ""; } },
    //判断是否日期
    IsDate: function (str) { var reg = /^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/; var r = str.match(reg); if (r == null) return false; var d = new Date(r[1], r[3] - 1, r[4], r[5], r[6], r[7]); return (d.getFullYear() == r[1] && (d.getMonth() + 1) == r[3] && d.getDate() == r[4] && d.getHours() == r[5] && d.getMinutes() == r[6] && d.getSeconds() == r[7]); },
    //判断是否图片格式
    IsImg:function(str){return /^(.gif|.jpg|.jpeg|.GIF|.JPG|.JPEG|.png)/.test(str)},
    //判断是否对应数据类型
    IsInt: function(str) { return /^-?\d+$/.test(str); },
    IsFloat: function(str) { return /^(-?\d+)(\.\d+)?$/.test(str); },
    IsIntPositive: function(str) { return /^[0-9]*[1-9][0-9]*$/.test(str); },
    IsFloatPositive: function(str) { return /^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$/.test(str); },
    //是否字母
    IsLetter: function(str) { return /^[A-Za-z]+$/.test(str); },
    //是否中文
    IsChinese: function(str) { return /^[\u0391-\uFFE5]+$/.test(str); },
    //是否邮编
    IsZipCode: function(str) { return /^[1-9]\d{5}$/.test(str); },
    //是否Email
    IsEmail: function(str) { return /^[A-Z_a-z0-9-\.]+@([A-Z_a-z0-9-]+\.)+[a-z0-9A-Z]{2,4}$/.test(str); },
    //是否电话
    IsMobile: function(str) { return /^((\(\d{2,3}\))|(\d{3}\-))?((1[35]\d{9})|(18[89]\d{8}))$/.test(str); },
    //判断是否有效的URL
    IsUrl: function(str) { return /^(http:|ftp:)\/\/[A-Za-z0-9]+\.[A-Za-z0-9]+[\/=\?%\-&_~`@[\]\':+!]*([^<>\"])*$/.test(str); },
    //判断是否IP地址
    IsIpAddress: function(str) { return /^(0|[1-9]\d?|[0-1]\d{2}|2[0-4]\d|25[0-5]).(0|[1-9]\d?|[0-1]\d{2}|2[0-4]\d|25[0-5]).(0|[1-9]\d?|[0-1]\d{2}|2[0-4]\d|25[0-5]).(0|[1-9]\d?|[0-1]\d{2}|2[0-4]\d|25[0-5])$/.test(str); },

    //二维码    
    QRCode: function(val, encoding, level, size) {
        val = escape(val);
        encoding = encoding || "Byte";
        level = level || "M";
        size = size || "4";
        var imgpath = "";
        $.ajax({ type: "GET",
            async: false,
            data: "cmd=set&val=" + val + "&encoding=" + encoding + "&level=" + level + "&ver=7&size=" + size,
            url: Common.GetRootPath() + "Model/Handler/QRCode.ashx",
            dataType: 'text',
            beforeSend: function(x) {
                x.setRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=utf-8");
            },
            success: function(data) {
                imgpath = data;
            },
            error: function(request, message, ex) {
                alert("错误：" + message);
                imgpath = "";
            }
        });
        return imgpath;
    },

    //URL转码
    Encode: function(str) { try { return encodeURIComponent(str) } catch (e) { return str } },
    //URL解码
    Decode: function(str) { try { return decodeURIComponent(str) } catch (e) { return str } },
    //加密算法  MD5加密算法不可逆加密算法
    Encry: function(str, tp) { var vstr = Global.BussinessTools("Encrypt", "EncrypStr", str + "," + tp); return vstr; },
    //解密算法  MD5加密算法 不能解密
    Decry: function(str, tp) { var vstr = Global.BussinessTools("Encrypt", "DecrypStr", str + "," + tp); return vstr; },
    //获取角色树
    GroupTreeOld: function(region, treeid, setting) { var _znodes = Global.BussinessNetOffice("GroupHandle", "RegionGroups", region).toJson(); var zNodes = []; if (_znodes) { $(_znodes).each(function(i, col) { var _c = { id: col.id, parentId: col.pid, name: col.name, regionid: col.region_id, departmentid: col.department_id, sort: col.sort, memo: col.memo, display: col.display, group_nameid: col.group_nameid, open: false }; zNodes.push(_c); }); } $.fn.zTree.init($("#" + treeid), setting, zNodes); },
    GroupTree: function(region, treeid, setting, showsys) { var _znodes = Global.TableData("sv_group", "*", "").toJson(); var zNodes = []; if (_znodes) { $(_znodes).each(function(i, col) { var myname = col.name; if (col.sysname) { if (showsys) { var sname = col.sysname; if (sname.length > 50) { sname = sname.substr(0, 50) + "..." } myname = col.name + '　系统（' + sname + '）'; } else { myname = col.name; } }; var _c = { id: col.id, parentId: col.pid, name: myname, regionid: col.region_id, departmentid: col.department_id, sort: col.sort, memo: col.memo, display: col.display, group_nameid: col.group_nameid, open: false, stype: col.type }; zNodes.push(_c); }); } $.fn.zTree.init($("#" + treeid), setting, zNodes); },

    //日期计算
    DataToLong: function(d) { var vdate = ""; if (d) { var jdate = new Date(d.replaceAll("-", "/")); var y = jdate.getFullYear(); var m = jdate.getMonth() + 1; var d = jdate.getDate(); if (m < 10) { m = "0" + m; } if (d < 10) { d = "0" + d; } vdate = y + "-" + m + "-" + d; } return vdate; },
    DataToLongMD: function(d) { var vdate = ""; if (d) { var jdate = new Date(d.replaceAll("-", "/")); var m = jdate.getMonth() + 1; var d = jdate.getDate(); if (m < 10) { m = "0" + m; } if (d < 10) { d = "0" + d; } vdate = m + "-" + d; } return vdate; },
    DataToLongZW: function(d) { var vdate = ""; if (d) { var jdate = new Date(d.replaceAll("-", "/")); var y = jdate.getFullYear(); var m = jdate.getMonth() + 1; var d = jdate.getDate(); if (m < 10) { m = "0" + m; } if (d < 10) { d = "0" + d; } vdate = y + "年" + m + "月" + d + "日"; } return vdate; },

    //当前日期
    NowDate: function() { var now = Global.PageChange("DATENOW"); return new Date(now); },

    Monday: function() { var currentDate = Common.NowDate(); var week = currentDate.getDay(); var millisecond = 1000 * 60 * 60 * 24; var minusDay = week != 0 ? week - 1 : 6; var monday = new Date(currentDate.getTime() - (minusDay * millisecond)); return monday },
    Sunday: function() { var mondaystr = Common.Monday(); var monday = new Date(mondaystr); var millisecond = 1000 * 60 * 60 * 24; var sunday = new Date(monday.getTime() + (6 * millisecond)); return sunday },

    //当前月开始日期、结束日期
    MonthBegin: function() { var currentDate = Common.NowDate(); var currentMonth = currentDate.getMonth(); var currentYear = currentDate.getFullYear(); var firstDay = new Date(currentYear, currentMonth, 1); return firstDay },
    MonthEnd: function(day) { var currentDate = Common.NowDate(); if (day && day != "") { currentDate = day; } var currentMonth = currentDate.getMonth(); var currentYear = currentDate.getFullYear(); if (currentMonth == 11) { currentYear++; currentMonth = 0; } else { currentMonth++; }; var millisecond = 1000 * 60 * 60 * 24; var nextMonthDayOne = new Date(currentYear, currentMonth, 1); var lastDay = new Date(nextMonthDayOne.getTime() - millisecond); return lastDay },


    //季度开始日期、结束日期
    QuarterBegin: function() { var currentMonth = Common.QuarterSeasonStartMonth(); var currentDate = Common.NowDate(); var currentYear = currentDate.getFullYear(); var begin = new Date(currentYear, currentMonth, 1); return begin },
    QuarterEnd: function() { var begin = Common.QuarterBegin(); var currentMonth = begin.getMonth(); var currentYear = begin.getFullYear(); var day = begin.getDate(); var end = Common.MonthEnd(new Date(currentYear, currentMonth + 2, day)); return end },

    //半年开始日期、结束日期
    HalfYearBegin: function() { var currentDate = Common.NowDate(); var currentMonth = currentDate.getMonth(); var currentYear = currentDate.getFullYear(); if (currentMonth > 5) { return new Date(currentYear, 5, 1) } else { return new Date(currentYear, 0, 1) } },
    HalfYearEnd: function() { var currentDate = Common.NowDate(); var currentMonth = currentDate.getMonth(); var currentYear = currentDate.getFullYear(); if (currentMonth > 5) { return new Date(currentYear, 11, 31) } else { return new Date(currentYear, 5, 30) } },

    //年度开始日期、结束日期
    YearBegin: function() { var currentDate = Common.NowDate(); var currentMonth = currentDate.getMonth(); var currentYear = currentDate.getFullYear(); return new Date(currentYear, 0, 1) },
    YearEnd: function() { var currentDate = Common.NowDate(); var currentMonth = currentDate.getMonth(); var currentYear = currentDate.getFullYear(); return new Date(currentYear, 11, 31) },

    //季度开始月份
    QuarterSeasonStartMonth: function() { var currentDate = Common.NowDate(); var month = currentDate.getMonth(); var quarterMonthStart = 0; var spring = 0; var summer = 3; var fall = 6; var winter = 9; if (month < 3) { return spring; } if (month < 6) { return summer; } if (month < 9) { return fall; } return winter; },
    StrData: function(date) { var currentMonth = date.getMonth(); var currentYear = date.getFullYear(); var currentDay = date.getDate(); return currentYear + "-" + (currentMonth + 1) + "-" + currentDay },

    //计算工作日结束日期 开始日期+天数
    ComputeWorkEndDate: function(date, n) { var vdate = Global.BussinessHandle("WorkTimeHandle", "Compute_work_end_date", date + "," + n); return vdate; },
    //计算两日期之间的工作日天数
    ComputeWorkDays: function(begindate, enddate) { var vdate = Global.BussinessHandle("WorkTimeHandle", "Compute_work_days", begindate + "," + enddate); return vdate; },
    //比较两时间大小
    CompareDatetime: function(begindate, enddate) { var vdate = Global.BussinessHandle("WorkTimeHandle", "DateTime_Compare", begindate + "," + enddate); return vdate; },
    //获取网站路径不要虚拟目录路径
    GetLocalPath: function() { var strFullPath = window.document.location.href; var strPath = window.document.location.pathname; var pos = strFullPath.indexOf(strPath); var prePath = strFullPath.substring(0, pos); return prePath; },
    //获取网站路径以及虚拟目录
    GetAppPath: function() { var strFullPath = window.document.location.href; var strPath = window.document.location.pathname; var pos = strFullPath.indexOf(strPath); var prePath = strFullPath.substring(0, pos); var postPath = strPath.substring(0, strPath.substr(1).indexOf('/') + 2); return (prePath + postPath); },
    //获取网站路径以及虚拟目录 + FrameWork
    GetRootPath: function() { return (Common.GetAppPath() + "FwCut/"); },
    //获取页面完整路径
    GetPagePath: function() { var root = Common.GetRootPath(); var strFullPath = window.document.location.href; var pagePath = strFullPath.replace(root, ""); return pagePath; },
    //获取页面完整路径 去掉参数
    GetPagePathNoPram: function() { var root = Common.GetRootPath().toLocaleLowerCase(); var strFullPath = window.document.location.href.toLocaleLowerCase(); var pagePath = strFullPath.replace(root, ""); var pages = pagePath.split('?'); return pages[0]; },
    //json转换为字符串
    Json2String: function(obj) { var isArray = obj instanceof Array; var r = []; for (var i in obj) { var value = obj[i]; if (typeof value == 'string') { value = '"' + value + '"'; } else if (value != null && typeof value == 'object') { value = '"' + value + '"'; } r.push((isArray ? '' : i + ':') + value); } if (isArray) { return '[' + r.join(',') + ']'; } else { return '{' + r.join(',') + '}'; } },
    //json转换为OBject
    Json2Object: function(obj) { var isArray = obj instanceof Array; var r = []; for (var i in obj) { var value = obj[i]; if (typeof value == 'object') { value = '"' + value + '"'; } else if (value != null && typeof value == 'object') { value = '"' + value + '"'; } r.push((isArray ? '' : i + ':') + value); } if (isArray) { return '[' + r.join(',') + ']'; } else { return '{' + r.join(',') + '}'; } },
    JsonAdd: function(jsonname, element, attribute) { var jsonString = Common.Json2String(jsonname); var jsonlink = ","; if (jsonString == "{}") { jsonlink = "" }; jsonString = jsonString.substring(0, jsonString.length - 1); var jsonArr = jsonlink + element + ":" + attribute + "}"; jsonString = jsonString.concat(jsonArr); return jsonString.toJson(); },
    //判断SQL注入
    SqlValid: function (val) { var re = /select|update|delete|exec|count| or|'|"|=|;|>|<|%|#|,|\\|\(|\>/i; if (re.test(val)) { obj.value = ""; return "请您不要在参数中输入特殊字符和SQL关键字！" } else { return ""} },

    //查找字符串出现的位置 0 开始
    Find:function(str,cha,idx){var x = str.indexOf(cha);idx = idx || 1;for(var i=0;i<idx;i++){x=str.indexOf(cha,x+1);}return x;},
    //人民币数字转大写
    Money2Trans: function(a) { var b = 9.999999999999E10, f = "\u96f6", h = "\u58f9", g = "\u8d30", e = "\u53c1", k = "\u8086", p = "\u4f0d", q = "\u9646", r = "\u67d2", s = "\u634c", t = "\u7396", l = "\u62fe", d = "\u4f70", i = "\u4edf", m = "\u4e07", j = "\u4ebf", u = "人民币", o = "\u5143", c = "\u89d2", n = "\u5206", v = "\u6574"; a = a.toString(); if (a == "") { alert("转换内容不能为空!"); return ""; } if (a.match(/[^,.\d]/) != null) { alert("输入有误,请输入小数点和纯数字!"); return ""; } if (a.match(/^((\d{1,3}(,\d{3})*(.((\d{3},)*\d{1,3}))?)|(\d+(.\d+)?))$/) == null) { alert("输入有误,请输入小数点和纯数字!"); return ""; } a = a.replace(/,/g, ""); a = a.replace(/^0+/, ""); if (Number(a) > b) { alert("\u5bf9\u4e0d\u8d77,\u4f60\u8f93\u5165\u7684\u6570\u5b57\u592a\u5927\u4e86!\u6700\u5927\u6570\u5b57\u4e3a99999999999.99\uff01"); return ""; } b = a.split("."); if (b.length > 1) { a = b[0]; b = b[1]; b = b.substr(0, 2); } else { a = b[0]; b = ""; } h = new Array(f, h, g, e, k, p, q, r, s, t); l = new Array("", l, d, i); m = new Array("", m, j); n = new Array(c, n); c = ""; if (Number(a) > 0) { for (d = j = 0; d < a.length; d++) { e = a.length - d - 1; i = a.substr(d, 1); g = e / 4; e = e % 4; if (i == "0") j++; else { if (j > 0) c += h[0]; j = 0; c += h[Number(i)] + l[e]; } if (e == 0 && j < 4) c += m[g]; } c += o; } if (b != "") for (d = 0; d < b.length; d++) { i = b.substr(d, 1); if (i != "0") c += h[Number(i)] + n[d]; } if (c == "") c = f + o; if (b.length < 2) c += v; return c; },
    Money2TransObj: function (obj,forid) {
        var v = $(obj).val() || $(obj).html();
        v = v.replaceAll(" ", "");
        if (!isNaN(v))
        {
            var dx = Common.Money2Trans(v);
            var fobj = $("#" + forid);
            if (fobj.length == 0)
            {
                fobj = $("[field='" + forid + "']");

            }
            try {
                fobj.val(dx);
                fobj.html(dx);
            }
            catch (e)
            { }
        }
    },
    GetAllParam: function(str) { var left = str.substr(0, str.indexOf("}") + 1); var right = str.substr(str.indexOf("}") + 1, str.length); var pramname = left.substr(left.indexOf("{") + 1).replace("}", "") + ","; if (right.indexOf("{") > -1) { pramname += Common.GetAllParam(right); } return pramname; },
    //获取大括号里面的参数并返回结果
    ParamChange: function(str) { var parm = Common.GetAllParam(str).split(","); for (var i = 0; i < parm.length; i++) { if (parm[i] != "") { var val = Global.UserInfo(parm[i]); str = str.replace("{" + parm[i] + "}", "" + val + ""); } } return str; },

    //根据URL判断页面是否存在
    PageExist: function(url) { var vmsg = Global.BussinessHandle("PageHandle", "PageIsExist", url); return vmsg; },
    //根据URL判断文件是否存在
    FileExist: function(url) { var pages = url.split('?'); url = pages[0]; var vmsg = Global.BussinessTools("Files", "FileIsExists", url); return vmsg; },

    //组装控件属性
    ComConnectExt: function(attr, val) { if (val && val != "" && val != "undefined") { return " " + attr + val; } else { return ""; } },
    ComConnect: function(val, attr) { if (val && val != "" && val != "undefined") { return " " + val + attr; } else { return ""; } },
    ComAttr: function (attr, val) { if (val && val != "" && val != "undefined") { return " " + attr + "=" + "'" + val + "'"; } else { return ""; } },
    ComAttr2: function (attr, val) { if (val && val != "" && val != "undefined") { return " " + attr + "=" + val + ""; } else { return ""; } },

    ComStyle: function (attr, val, dw) { if (!dw) { dw = ""; } if (val && val != "") { return " " + attr + ":" + val + dw + ";"; } else { return ""; } },
    //数字增加效果
    CountUp: function (id, count, div_by) {
        if (!div_by) {
            div_by = 100;
        }
        var speed = Math.round(count / div_by),          
        $display = $('#' + id),
        run_count = 24,
        int_speed = 1;
        var oldval = $display.text()||"0";
        if (parseInt(oldval))
        {
            speed = Math.round(count / oldval);
            if (speed <= 1)
            {
                int_speed = (count - oldval) / 3 * div_by;                 
            }
        }
        
        var int = setInterval(function() {
            if (run_count < div_by && parseInt($display.text()) < count - run_count) {
                $display.text(speed * run_count);
                run_count++;
            } else if (parseInt($display.text()) < count) {
                var curr_count = parseInt($display.text()) + 1;
                $display.text(curr_count);
            } else {
                clearInterval(int);
            }
        }, int_speed);
    },
    GetTokenUserid: function() { return Global.GetConfig("Map.TokenUserid"); },
    //获取用户在ATP中Token
    GetToken: function(uid) { var tokenwebservive = Global.GetConfig("TokenService"); var token = ""; $.ajax({ type: "POST", contentType: "application/json", url: tokenwebservive + "/InsertSessionToken", data: '{"userid":"' + uid + '" }', dataType: 'json', async: false, error: function(message) { alert(message.responseText); }, success: function(data) { token = data.d; } }); return token; },
    //JS获取后缀名
    Extend: function(val) { var d = /\.[^\.]+$/.exec(val); return d; },
    //中文转拼音首字母
    MakePy: function(str) {
        var strChineseFirstPY = ""; var oMultiDiff = { "19969": "DZ", "19975": "WM", "19988": "QJ", "20048": "YL", "20056": "SC", "20060": "NM", "20094": "QG", "20127": "QJ", "20167": "QC", "20193": "YG", "20250": "KH", "20256": "ZC", "20282": "SC", "20285": "QJG", "20291": "TD", "20314": "YD", "20340": "NE", "20375": "TD", "20389": "YJ", "20391": "CZ", "20415": "PB", "20446": "YS", "20447": "SQ", "20504": "TC", "20608": "KG", "20854": "QJ", "20857": "ZC", "20911": "PF", "20504": "TC", "20608": "KG", "20854": "QJ", "20857": "ZC", "20911": "PF", "20985": "AW", "21032": "PB", "21048": "XQ", "21049": "SC", "21089": "YS", "21119": "JC", "21242": "SB", "21273": "SC", "21305": "YP", "21306": "QO", "21330": "ZC", "21333": "SDC", "21345": "QK", "21378": "CA", "21397": "SC", "21414": "XS", "21442": "SC", "21477": "JG", "21480": "TD", "21484": "ZS", "21494": "YX", "21505": "YX", "21512": "HG", "21523": "XH", "21537": "PB", "21542": "PF", "21549": "KH", "21571": "E", "21574": "DA", "21588": "TD", "21589": "O", "21618": "ZC", "21621": "KHA", "21632": "ZJ", "21654": "KG", "21679": "LKG", "21683": "KH", "21710": "A", "21719": "YH", "21734": "WOE", "21769": "A", "21780": "WN", "21804": "XH", "21834": "A", "21899": "ZD", "21903": "RN", "21908": "WO", "21939": "ZC", "21956": "SA", "21964": "YA", "21970": "TD", "22003": "A", "22031": "JG", "22040": "XS", "22060": "ZC", "22066": "ZC", "22079": "MH", "22129": "XJ", "22179": "XA", "22237": "NJ", "22244": "TD", "22280": "JQ", "22300": "YH", "22313": "XW", "22331": "YQ", "22343": "YJ", "22351": "PH", "22395": "DC", "22412": "TD", "22484": "PB", "22500": "PB", "22534": "ZD", "22549": "DH", "22561": "PB", "22612": "TD", "22771": "KQ", "22831": "HB", "22841": "JG", "22855": "QJ", "22865": "XQ", "23013": "ML", "23081": "WM", "23487": "SX", "23558": "QJ", "23561": "YW", "23586": "YW", "23614": "YW", "23615": "SN", "23631": "PB", "23646": "ZS", "23663": "ZT", "23673": "YG", "23762": "TD", "23769": "ZS", "23780": "QJ", "23884": "QK", "24055": "XH", "24113": "DC", "24162": "ZC", "24191": "GA", "24273": "QJ", "24324": "NL", "24377": "TD", "24378": "QJ", "24439": "PF", "24554": "ZS", "24683": "TD", "24694": "WE", "24733": "LK", "24925": "TN", "25094": "ZG", "25100": "XQ", "25103": "XH", "25153": "PB", "25170": "PB", "25179": "KG", "25203": "PB", "25240": "ZS", "25282": "FB", "25303": "NA", "25324": "KG", "25341": "ZY", "25373": "WZ", "25375": "XJ", "25384": "A", "25457": "A", "25528": "SD", "25530": "SC", "25552": "TD", "25774": "ZC", "25874": "ZC", "26044": "YW", "26080": "WM", "26292": "PB", "26333": "PB", "26355": "ZY", "26366": "CZ", "26397": "ZC", "26399": "QJ", "26415": "ZS", "26451": "SB", "26526": "ZC", "26552": "JG", "26561": "TD", "26588": "JG", "26597": "CZ", "26629": "ZS", "26638": "YL", "26646": "XQ", "26653": "KG", "26657": "XJ", "26727": "HG", "26894": "ZC", "26937": "ZS", "26946": "ZC", "26999": "KJ", "27099": "KJ", "27449": "YQ", "27481": "XS", "27542": "ZS", "27663": "ZS", "27748": "TS", "27784": "SC", "27788": "ZD", "27795": "TD", "27812": "O", "27850": "PB", "27852": "MB", "27895": "SL", "27898": "PL", "27973": "QJ", "27981": "KH", "27986": "HX", "27994": "XJ", "28044": "YC", "28065": "WG", "28177": "SM", "28267": "QJ", "28291": "KH", "28337": "ZQ", "28463": "TL", "28548": "DC", "28601": "TD", "28689": "PB", "28805": "JG", "28820": "QG", "28846": "PB", "28952": "TD", "28975": "ZC", "29100": "A", "29325": "QJ", "29575": "SL", "29602": "FB", "30010": "TD", "30044": "CX", "30058": "PF", "30091": "YSP", "30111": "YN", "30229": "XJ", "30427": "SC", "30465": "SX", "30631": "YQ", "30655": "QJ", "30684": "QJG", "30707": "SD", "30729": "XH", "30796": "LG", "30917": "PB", "31074": "NM", "31085": "JZ", "31109": "SC", "31181": "ZC", "31192": "MLB", "31293": "JQ", "31400": "YX", "31584": "YJ", "31896": "ZN", "31909": "ZY", "31995": "XJ", "32321": "PF", "32327": "ZY", "32418": "HG", "32420": "XQ", "32421": "HG", "32438": "LG", "32473": "GJ", "32488": "TD", "32521": "QJ", "32527": "PB", "32562": "ZSQ", "32564": "JZ", "32735": "ZD", "32793": "PB", "33071": "PF", "33098": "XL", "33100": "YA", "33152": "PB", "33261": "CX", "33324": "BP", "33333": "TD", "33406": "YA", "33426": "WM", "33432": "PB", "33445": "JG", "33486": "ZN", "33493": "TS", "33507": "QJ", "33540": "QJ", "33544": "ZC", "33564": "XQ", "33617": "YT", "33632": "QJ", "33636": "XH", "33637": "YX", "33694": "WG", "33705": "PF", "33728": "YW", "33882": "SR", "34067": "WM", "34074": "YW", "34121": "QJ", "34255": "ZC", "34259": "XL", "34425": "JH", "34430": "XH", "34485": "KH", "34503": "YS", "34532": "HG", "34552": "XS", "34558": "YE", "34593": "ZL", "34660": "YQ", "34892": "XH", "34928": "SC", "34999": "QJ", "35048": "PB", "35059": "SC", "35098": "ZC", "35203": "TQ", "35265": "JX", "35299": "JX", "35782": "SZ", "35828": "YS", "35830": "E", "35843": "TD", "35895": "YG", "35977": "MH", "36158": "JG", "36228": "QJ", "36426": "XQ", "36466": "DC", "36710": "JC", "36711": "ZYG", "36767": "PB", "36866": "SK", "36951": "YW", "37034": "YX", "37063": "XH", "37218": "ZC", "37325": "ZC", "38063": "PB", "38079": "TD", "38085": "QY", "38107": "DC", "38116": "TD", "38123": "YD", "38224": "HG", "38241": "XTC", "38271": "ZC", "38415": "YE", "38426": "KH", "38461": "YD", "38463": "AE", "38466": "PB", "38477": "XJ", "38518": "YT", "38551": "WK", "38585": "ZC", "38704": "XS", "38739": "LJ", "38761": "GJ", "38808": "SQ", "39048": "JG", "39049": "XJ", "39052": "HG", "39076": "CZ", "39271": "XT", "39534": "TD", "39552": "TD", "39584": "PB", "39647": "SB", "39730": "LG", "39748": "TPB", "40109": "ZQ", "40479": "ND", "40516": "HG", "40536": "HG", "40583": "QJ", "40765": "YQ", "40784": "QJ", "40840": "YK", "40863": "QJG" };
        return make(str); function make(str) { if (typeof (str) != "string") throw new Error(-1, "函数makePy需要字符串类型参数!"); var arrResult = new Array(); for (var i = 0, len = str.length; i < len; i++) { var ch = str.charAt(i); arrResult.push(checkCh(ch)) } return mkRslt(arrResult) }; function mkRslt(arr) { var arrRslt = [""]; for (var i = 0, len = arr.length; i < len; i++) { var str = arr[i]; var strlen = str.length; if (strlen == 1) { for (var k = 0; k < arrRslt.length; k++) { arrRslt[k] += str } } else { var tmpArr = arrRslt.slice(0); arrRslt = []; for (k = 0; k < strlen; k++) { var tmp = tmpArr.slice(0); for (var j = 0; j < tmp.length; j++) { tmp[j] += str.charAt(k) } arrRslt = arrRslt.concat(tmp) } } } return arrRslt[0]; } function checkCh(ch) { var uni = ch.charCodeAt(0); if (uni > 40869 || uni < 19968) return ch; return (oMultiDiff[uni] ? oMultiDiff[uni] : (strChineseFirstPY.charAt(uni - 19968))) }
    },
    //判断是否都显示有图片，没有就下载图片在显示
    ImgLoad: function() { var imgs = $("img"); for (var i = 0; i < imgs.length; i++) { var g = imgs[i]; var img = new Image(); img.src = g.src; if (img.fileSize > 0 || (img.width > 0 && img.height > 0)) { } else { var path = img.src; var newPath = Global.BussinessHandle("CopyImgHandle", "GetNewPaths", path); g.src = newPath; } } },

    //加载 
    LoadFlag: "0",
    Loading: function(bool) { if (bool) { $(".loadings").show(); Common.LoadFlag = "1"; } else { setInterval(Common.LoadingHide, 1000); } },
    LoadingHide: function() { if (Common.LoadFlag == "1") { $(".loadings").hide(); Common.LoadFlag = "0"; } },


    Diag: "", IsSucess: false, IsContinue: false, Pbbar_pos: 0, Interval: "",
    //真实进度条    LiuY  2015-10-28 
    //例：Common.LoadProgress(5,2000,true,"离线包上传进度","离线包正在导入，请不要关闭或刷新页面。");
    //    说明：最大百分百为5 ,每2000毫秒执行1%，如果执行到 5% 则停止，但不关闭进度条
    //    Common.LoadProgress(100,800,true,"离线包检查进度","离线包正在检查，请不要关闭或刷新页面。");
    //    说明：最大百分百为100 ,每800毫秒执行1%，如果前面序列正在执行，则强行终止,此序列接着前面进度继续执行
    //          比如前面 执行到 2%,此方法就按 3%开始执行，每800毫秒增加1%。
    //          只有maxno = 100时 ，才执行sucessfun方法及关闭进度条。
    //    Common.LoadProgress(100,100,true,"新开一个进度条","我是一个新开的进度条。","",true);
    LoadProgress: function(maxno, interval, closeinter, title, msg, sucessfun, isnew) { if (isnew) { Common.Diag = null; Common.Pbbar_pos = 0; Common.Interval = ""; Common.IsContinue = false; $("#procontent1").remove(); Common.Proid = "" } if (closeinter) { if (Common.Interval) { clearInterval(Common.Interval) } } title = title || "处理进度"; msg = msg || "正在处理，请稍等"; if (!Common.Diag) { var diag = new Dialog(); diag.Title = title; diag.ID = "d_pb"; diag.Width = 430; diag.Height = 150; diag.ShowCloseButton = false; diag.show(); Common.Proid = "spb" + Common.Guid(); var bar = $('<div id="' + Common.Proid + '"></div><span id="' + Common.Proid + '-label"></span>'); var $progress = $('<div id="procontent1" class="padding_top20 padding_left20" ></div>'); var $progressCon = $('<span id="' + Common.Proid + '_msg" class="icon_m_worry" style="height:34px;line-height:34px">' + msg + '</span><div class="hack10"></div>'); $progress.append($progressCon); $progress.append(bar); var $container = $(document.getElementById("_Container_d_pb")); $container.append($progress); Common.Diag = diag } if (!interval) { interval = 100 } var pbContainer = $("#" + Common.Proid).find(".pbContainer"); $("#_Title_d_pb").html(title); $("#" + Common.Proid + "_msg").html(msg); if (pbContainer.length == 0) { try { _progress = $("#" + Common.Proid).progressCtrl({ skin: Common.GetRootPath() + "Script/Plug/QUI/libs/images/loading/progress.png", width: 380 }) } catch (e) { top.Dialog.alert("需要引用进度条插件【FrameWork/Script/Plug/QUI/libs/js/other/progressbar.js】") } } var bartitle = $("#" + Common.Proid).find(".pbContainer").attr("title"); if (bartitle) { bartitle = Number(bartitle.replace("%", "")); Common.Pbbar_pos = bartitle } Common.Interval = setInterval(function() { if (!Common.IsSucess || Common.IsContinue) { if (++Common.Pbbar_pos > maxno) { if (maxno == 100) { Common.Pbbar_pos = 0; Common.Diag.close(); clearInterval(Common.Interval); if (sucessfun) { try { sucessfun() } catch (e) { eval(sucessfun) } } } return } _progress.progressCtrl(Common.Pbbar_pos) } else { Common.IsContinue = true; clearInterval(Common.Interval); Common.LoadProgress(maxno, 35) } }, interval) },
    ferror: "类型不正确;", d: "d", n: "n",
    //json数组排序,字段名称,排序类型：asc、desc
    Compare:function(name,sorttype) {sorttype = sorttype ||"asc";return function (object1, object2) {var value1 = object1[name];var value2 = object2[name];if (sorttype.toLocaleLowerCase() == "asc") {if (value2 < value1) {return 1;} else if (value2 > value1) {return -1;} else {return 0;}}else {if (value2 < value1) {return -1;} else if (value2 > value1) {return 1;} else {return 0;}}}},
    //JsonSelect Json 查询方法
    query: function(val, exp) { if (Common.left(exp, 1) != "@") { exp = "Common." + exp }; if (!exp) { return []; } var fn = Common.cache[exp]; try { if (!fn) { var code = Common.interpret(exp); code = Common.templ.replace("$C", code); fn = Common.cache[exp] = Common.complite(code); } return fn(val); } catch (e) { return []; } },

    //缓存,解决快速查找
    cache: {},
    rQuote: /""/g,
    rQuoteTemp: /!~/g,
    //扩展运算符
    alias: [/@/g, "_e.", /AND/gi, "&&", /OR/gi, "||", /<>/g, "!=", /NOT/gi, "!", /([^=<>])=([^=]|$)/g, '$1==$2'],
    // 定义常用的函数
    len: function(s) { return s.length; },
    left: function(s, n) { return s.substr(0, n); },
    right: function(s, n) { return s.substr(-n); },
    like: function(s, find) { return s.indexOf(find) + 1; },
    // 定义模函数
    templ: function(_list) { var _ret = []; var _i = -1; for (var _k in _list) { var _e = _list[_k]; if (_e != Object.prototype[_k]) { if ($C) { _ret[++_i] = _e; } } } return _ret; } .toString(),
    // 编译
    complite: function(code) { return eval("0," + code); },
    // 将扩展符号转换成标准的JS符号
    interpret: function(exp) { exp = exp.replace(Common.rQuote, "!~"); var arr = exp.split('"'); var i, n = arr.length; var k = Common.alias.length; for (var i = 0; i < n; i += 2) { var s = arr[i]; for (var j = 0; j < k; j += 2) { if (Common.like(s, Common.alias[j]) > -1) { s = s.replace(Common.alias[j], Common.alias[j + 1]); } } arr[i] = s; } for (var i = 1; i < n; i += 2) { arr[i] = arr[i].replace(Common.rQuoteTemp, '\\"'); } return arr.join('"'); },

    //引用js、css
    include: function(file) { var files = typeof file == "string" ? [file] : file; for (var i = 0; i < files.length; i++) { var name = files[i].replace(/^\s|\s$/g, ""); if (Common.FileExist(name) == "0") { name = "../" + name; }; var att = name.split('.'); var ext = att[att.length - 1].toLowerCase(); var isCSS = ext == "css"; var tag = isCSS ? "link" : "script"; var attr = isCSS ? " type=\"text/css\" rel=\"stylesheet\" " : " language=\"javascript\" type=\"text/javascript\" "; var link = (isCSS ? "href" : "src") + "=\"" + Common.GetRootPath() + name + "\""; if ($(tag + "[" + link + "]").length == 0) { $("head").append("<" + tag + attr + link + "></" + tag + ">"); } } }

});

 

//Json查询例子
/*

var doTest1 = function() {

var heros = [
{ name: '冰室女巫', DP: 38, AP: 1.3, Str: 16, Dex: 16, Int: 21 },
{ name: '沉默术士', DP: 39, AP: 1.1, Str: 17, Dex: 16, Int: 21 },
{ name: '娜迦海妖', DP: 51, AP: 6.0, Str: 21, Dex: 21, Int: 18 },
{ name: '赏金猎人', DP: 39, AP: 4.0, Str: 17, Dex: 21, Int: 16 },
{ name: '剧毒术士', DP: 45, AP: 3.1, Str: 18, Dex: 22, Int: 15 },
{ name: '光之守卫', DP: 38, AP: 1.1, Str: 16, Dex: 15, Int: 22 },
{ name: '炼金术士', DP: 49, AP: 0.6, Str: 25, Dex: 11, Int: 25 }

];

var match = Common.query(heros, '@Str=21 AND @Dex=21');
ShowResult(match);


// 查询：“士”结尾的
// 结果：沉默术士,剧毒术士,炼金术士
var match = Common.query(heros, 'JsonSel.right(@name,1)="士"');
ShowResult(match);
}

function ShowResult(result) {
for (var i = 0; i < result.length; i++) {
alert(result[i].name + " " + result[i].DP + " " + result[i].AP + " " + result[i].Str + " " + result[i].Dex + " " + result[i].Int);
}
}


*/
/*jquery.cookie*/
(function ($) { $.cookie = function (key, value, options) { if (arguments.length > 1 && (!/Object/.test(Object.prototype.toString.call(value)) || value === null || value === undefined)) { options = $.extend({}, options); if (value === null || value === undefined) { options.expires = -1 } if (typeof options.expires === "number") { var days = options.expires, t = options.expires = new Date(); t.setDate(t.getDate() + days) } value = String(value); return (document.cookie = [encodeURIComponent(key), "=", options.raw ? value : encodeURIComponent(value), options.expires ? "; expires=" + options.expires.toUTCString() : "", options.path ? "; path=" + options.path : "", options.domain ? "; domain=" + options.domain : "", options.secure ? "; secure" : ""].join("")) } options = value || {}; var decode = options.raw ? function (s) { return s } : decodeURIComponent; var pairs = document.cookie.split("; "); for (var i = 0, pair; pair = pairs[i] && pairs[i].split("=") ; i++) { if (decode(pair[0]) === key) { return decode(pair[1] || "") } } return null } })(jQuery);

 
/*
 * File:        chromatable.js
 * Version:     1.3.0
 * CVS:         $Id$
 * Description: Make a "sticky" header at the top of the table, so it stays put while the table scrolls
 * Author:      Zachary Siswick
 * Created:     Thursday 19 November 2009 8:53pm 
 * Language:    Javascript
 *
 */
(function ($) { $.chromatable = { defaults: { width: "900px", height: "300px", scrolling: "yes" } }; $.fn.chromatable = function (options) { var options = $.extend({}, $.chromatable.defaults, options); return this.each(function () { var $this = $(this); var $uniqueID = $(this).attr("ID") + ("wrapper"); $(this).css("width", options.width).addClass("_scrolling"); $(this).wrap('<div class="scrolling_outer"><div id="' + $uniqueID + '" class="scrolling_inner"></div></div>'); $(".scrolling_outer").css({ "position": "relative" }); $("#" + $uniqueID).css({ "border": "0px solid #CCCCCC", "overflow-x": "hidden", "overflow-y": "auto", "padding-right": "17px" }); $("#" + $uniqueID).css("height", options.height); $("#" + $uniqueID).css("width", options.width); $(this).before($(this).clone().attr("id", "").addClass("_thead").css({ "width": options.width || "100%", "display": "block", "position": "absolute", "border": "none", "border-bottom": "0px solid #CCC", "top": "0px", "z-index": "699" })); $("._thead").children("tbody").remove(); $("._thead").children("tfoot").remove(); $(this).each(function ($this) { if (options.width == "100%" || options.width == "auto") { $("#" + $uniqueID).css({ "padding-right": "0px" }) } if (options.scrolling == "no") { $("#" + $uniqueID).before('<a href="#" class="expander" style="width:100%;">展开表格</a>'); $("#" + $uniqueID).css({ "padding-right": "0px" }); $(".expander").each(function (idx) { $(this).attr("ID", idx); $(this).bind("click", function () { $("#" + $uniqueID).css({ "height": "auto" }); $("#" + $uniqueID + " ._thead").remove(); $(this).remove() }) }); $("#" + $uniqueID).resizable({ handles: "s" }).css("overflow-y", "hidden") } }); $curr = $this.prev(); var thindex = 0; var trindex = 1; var trlen = $("thead:eq(0)>tr").length; if (window.navigator.userAgent.indexOf("Firefox") == 1) { $("thead:eq(0)>tr", this).each(function (i) { var thlen = $(this).find("th").length; $("th", this).each(function (j) { if (trlen == trindex) { if (trindex > 1 && j == 0) { $("thead:eq(0)>tr th:eq(" + thindex + ")", $curr).width($(this).width() + 0.5) } else { if (thlen / 2 < j) { $("thead:eq(0)>tr th:eq(" + thindex + ")", $curr).width($(this).width() - 0.5) } else { $("thead:eq(0)>tr th:eq(" + thindex + ")", $curr).width($(this).width() - 0.1) } } } else { if (thlen / 2 < j) { if (j == thlen - 1) { $("thead:eq(0)>tr th:eq(" + thindex + ")", $curr).width($(this).width() - 0.5) } else { $("thead:eq(0)>tr th:eq(" + thindex + ")", $curr).width($(this).width() + 0.5) } } else { $("thead:eq(0)>tr th:eq(" + thindex + ")", $curr).width($(this).width() - 0.5) } } thindex++ }); trindex++ }) } else { resizer($this) } if (options.width == "100%" || "auto") { $(window).resize(function () { var istablelist = $("[istablelist='1']"); for (var i = 0; i < istablelist.length; i++) { resizer($(istablelist[i])) } }) } }) }; function resizer($this) { var id = $($this).parents("[istablelist='1']").attr("id"); if (!id) { id = $($this).attr("id"); $this = $("#" + id + "_tid") } if (id) { var removeHeight = 10; var topbarshow = $("#" + id + "_topbar").is(":hidden"); var top = $("[forid='" + id + "']").css("top") || "0"; var isstat = $("[forid='" + id + "']").attr("isstat") || "0"; var istotal = $("[forid='" + id + "']").attr("istotal") || "0"; if (isstat == "0") { removeHeight = Number($("#" + id).find(".l-panel-bar").height()); removeHeight += Number($("#" + id).find("._thead").height()) - 18 } if (istotal == "1") { removeHeight += 27 } if (!topbarshow) { removeHeight += Number($("#" + id + "_topbar").height()) } var oldlistheight = $("#" + id).data("oldlistheight"); if (oldlistheight == "auto") { var listheight = Common.HeightWindow - removeHeight - Number(top.replace("px", "")) - 30; $("#" + id + "_tidwrapper").css("height", listheight); $("#" + id).data("listheight", listheight) } } $curr = $this.prev(); if ($curr.length > 0) { $("thead:eq(0)>tr th", $this).each(function (i) { $("thead:eq(0)>tr th:eq(" + i + ")", $curr).width($(this).width()) }) } } })(jQuery);


 /*进度效果*/
/*!
 * SunHater Circle Loader v0.2 (2013-12-28)
 * jQuery plugin
 * Copyright (c) 2014 Pavel Tzonkov <sunhater@sunhater.com>
 * Dual licensed under the MIT and GPL licenses.
 * http://opensource.org/licenses/MIT
 * http://www.gnu.org/licenses/gpl.html
 */
(function ($) { $.fn.shCircleLoader = function (first, second) { var defaultNamespace = "shcl", id = 1, sel = $(this); if (first === "destroy") { sel.find("." + defaultNamespace).detach(); return } else { if ((first === "progress") && (typeof second !== "undefined")) { sel.each(function () { var el = $(this), outer = el.find("." + defaultNamespace); if (!outer.get(0)) { return } if (!el.find("span").get(0)) { outer.append("<span></span>") } var span = outer.find("span").last(); span.html(second).css({ position: "absolute", display: "block", left: Math.round((outer.width() - span.width()) / 2) + "px", top: Math.round((outer.height() - span.height()) / 2) + "px" }) }); return } } var o = { namespace: defaultNamespace, radius: "auto", dotsRadius: "auto", color: "auto", dots: 12, duration: 1, loadid: "loadid", clockwise: true, externalCss: false, keyframes: "0%{{prefix}transform:scale(1)}80%{{prefix}transform:scale(.3)}100%{{prefix}transform:scale(1)}", uaPrefixes: ["o", "ms", "webkit", "moz", ""] }; $.extend(o, first); var cl = o.color, ns = o.namespace, dots = o.dots, eCss = o.externalCss, ua = o.uaPrefixes, no_px = function (str) { return str.replace(/(.*)px$/i, "$1") }, parseCss = function (text) { var i, prefix, ret = ""; for (i = 0; i < ua.length; i++) { prefix = ua[i].length ? ("-" + ua[i] + "-") : ""; ret += text.replace(/\{prefix\}/g, prefix) } return ret }, prefixedCss = function (property, value) { var ret = {}; if (!property.substr) { $.each(property, function (p, v) { $.extend(ret, prefixedCss(p, v)) }) } else { var i, prefix; for (i = 0; i < ua.length; i++) { prefix = ua[i].length ? ("-" + ua[i] + "-") : ""; ret[prefix + property] = value } } return ret }; while ($("#" + ns + id).get(0)) { id++ } if (!eCss) { var kf = o.keyframes.replace(/\s+$/, "").replace(/^\s+/, ""); if (!/(\;|\{)\s*visibility\s*\:/gi.test(kf)) { kf = /^(0+\%|from)\s*\{/i.test(kf) ? kf.replace(/^((0+\%|from)\s*\{)(.*)$/i, "$1visibility:visible;$3") : (/\s+(0+\%|from)\s*\{/i.test(kf) ? kf.replace(/(\s+(0+\%|from)\s*\{)/i, "$1visibility:visible;") : ("0%{visibility:visible}" + kf)) } $($("head").get(0) ? "head" : "body").append('<style id="' + ns + id + '" type="text/css">' + parseCss("@{prefix}keyframes " + ns + id + "_bounce{" + kf + "}") + "</style>") } sel.each(function () { var r, dr, i, dot, rad, x, y, delay, offset, css, cssBase = {}, el = $(this), l = el.find("." + defaultNamespace); if (l.get(0)) { l.shCircleLoader("destroy") } el.html('<div loadid="' + o.loadid + '" class="' + ns + ((ns != defaultNamespace) ? (" " + defaultNamespace) : "") + '"></div>'); if (eCss) { el = el.find("div") } x = el.innerWidth() - no_px(el.css("padding-left")) - no_px(el.css("padding-right")); y = el.innerHeight() - no_px(el.css("padding-top")) - no_px(el.css("padding-bottom")); r = (o.radius == "auto") ? ((x < y) ? (x / 2) : (y / 2)) : o.radius; if (!eCss) { r--; if (o.dotsRadius == "auto") { dr = Math.abs(Math.sin(Math.PI / (1 * dots))) * r; dr = (dr * r) / (dr + r) - 1 } else { dr = o.dotsRadius } el = el.find("div"); i = Math.ceil(r * 2); css = { position: "relative", width: i + "px", height: i + "px" }; if (i < x) { css.marginLeft = Math.round((x - i) / 2) } if (i < y) { css.marginTop = Math.round((y - i) / 2) } el.css(css); i = Math.ceil(dr * 2) + "px"; cssBase = { position: "absolute", visibility: "hidden", width: i, height: i }; if (cl !== null) { cssBase.background = (cl == "auto") ? el.css("color") : cl } $.extend(cssBase, prefixedCss({ "border-radius": Math.ceil(dr) + "px", "animation-name": ns + id + "_bounce", "animation-duration": o.duration + "s", "animation-iteration-count": "infinite", "animation-direction": "normal" })) } for (i = 0; i < dots; i++) { el.append("<div></div>"); if (eCss && (typeof dr === "undefined")) { dr = (no_px(el.find("div").css("width")) / 2) } dot = el.find("div").last(); delay = (o.duration / dots) * i; rad = (2 * Math.PI * i) / dots; offset = r - dr; x = offset * Math.sin(rad); y = offset * Math.cos(rad); if (o.clockwise) { y = -y } css = { left: Math.round(x + offset) + "px", top: Math.round(y + offset) + "px" }; if (delay) { $.extend(css, prefixedCss("animation-delay", delay + "s")) } $.extend(css, cssBase); dot.css(css) } }) } })(jQuery);




$.fn.countTo = function (options) {
    options = options || {};

    return $(this).each(function () {
        // set options for current element
        var settings = $.extend({}, $.fn.countTo.defaults, {
            from: $(this).data('from'),
            to: $(this).data('to'),
            speed: $(this).data('speed'),
            refreshInterval: $(this).data('refresh-interval'),
            decimals: $(this).data('decimals')
        }, options);

        // how many times to update the value, and how much to increment the value on each update
        var loops = Math.ceil(settings.speed / settings.refreshInterval),
            increment = (settings.to - settings.from) / loops;

        // references & variables that will change with each update
        var self = this,
            $self = $(this),
            loopCount = 0,
            value = settings.from,
            data = $self.data('countTo') || {};

        $self.data('countTo', data);

        // if an existing interval can be found, clear it first
        if (data.interval) {
            clearInterval(data.interval);
        }
        data.interval = setInterval(updateTimer, settings.refreshInterval);

        // initialize the element with the starting value
        render(value);

        function updateTimer() {
            value += increment;
            loopCount++;

            render(value);

            if (typeof (settings.onUpdate) == 'function') {
                settings.onUpdate.call(self, value);
            }

            if (loopCount >= loops) {
                // remove the interval
                $self.removeData('countTo');
                clearInterval(data.interval);
                value = settings.to;

                if (typeof (settings.onComplete) == 'function') {
                    settings.onComplete.call(self, value);
                }
            }
        }

        function render(value) {
            var formattedValue = settings.formatter.call(self, value, settings);
            $self.html(formattedValue);
        }
    });
};

$.fn.countTo.defaults = {
    from: 0,               // the number the element should start at
    to: 0,                 // the number the element should end at
    speed: 1000,           // how long it should take to count between the target numbers
    refreshInterval: 100,  // how often the element should be updated
    decimals: 0,           // the number of decimal places to show
    formatter: formatter,  // handler for formatting the value before rendering
    onUpdate: null,        // callback method for every time the element is updated
    onComplete: null       // callback method for when the element finishes updating
};

function formatter(value, settings) {
    return value.toFixed(settings.decimals);
}

